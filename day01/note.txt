NodeJS环境中支持绝大部分得ES6得功能


ES6新特性
	语法方面
		let   =  var

		const   常量命名
		const  schoolName = ' 赣州中学' ;

		...

		(形参)=>{函数体}           箭头函数
		(a,b)=>{return a+b}
		(a,b)=>{a+b}
		a=>a		
	功能方面
		对对象 函数 数组进行了功能性得扩展
		复制一个对象
		let  obj = {
			name:'zhangsan',
			age:12
		};
		//复制对象
		1.json
		JSON.parse(JSON.stringify(obj))
		2.遍历对象 然后将属性和属性值放置到一个新对象里
		let obj2 = {};
		for(var key in obj){	
			obj2{key} = obj[key]
		}
		3.es6方式
		let obj2 = {};
		Object.assign(obj2,obj)

		Object.assign(obj,o1,o2,o3);


		set  map 		Class 	
		用类去创建实例  构造器
		用类去实现继承   extends
		Promise  	承诺对象（异步）
		模块化...	(企业级开发)

		webpack  打包工具
			Vue    .vue   .js
			React  	.js  .css
		打包   整合得资源.


NodeJS
	环境,后台语言
	内部封装了google v8引擎 js解析器
	npm包管理工具 (国外得镜像)
		包 -- 模块 --第三方模块
	下载依赖  删除依赖  更新依赖
	cnpm 淘宝镜像得npm工具(用得是国内得镜像)
		npm install -g cnpm
			全局安装cnpm包
		cnpm install -g babel-cli

	yarn 包管理工具  React
		yarn add babel-cli

NodeJS内置模块得介绍
		NodeJS后台语言
		url  网址模块
		http 服务器模块
		querystring  查询字符串模块
		path  文件得路径模块

		第三方 express框架 
		基于http模块得

	第三方包 
		package.json中记录了项目的相关的信息
			dependencies  产品阶段的依赖
			devDependencies   


	1.npm install -g cnpm --registry=https://registry.npm.taobao.org
	2.cnpm -v
	3.cnpm install -g  babel-cli
	4.babel --version
	5.cnpm install babel-preset-latest (局部安装 弄转化工具得)
	6.编写babel配置文件 



babel命令
	babel  文件名  将转换的结果输出到终端
	babel  文件名  --out-file  文件名
	  babel 1-a.js --out-file dist/2-a.js

	  babel 目录名 --out-dir 目录名
	  将第一个目录名中的所有文件转换成es5的代码,输出到第二个目录底下的同名文件中


项目升级 
	再安装依赖的时候需要记录,让使用该项目的人,一眼能看到项目的信息以及依赖
	需要去些package.json

	babel-cli
	babel-preset-latest

	1.package.json 
	在项目底下执行
	cnpm init -y
	快捷生成package.json文件
	2.下载了项目依赖
	 cnpm install --save-dev
	 babel-cli
	 babel-preset-latest
	3.创建.babelrc
	{
		"presets":["latest"]
	}
	4.新增了指令
	  在package.json的"scripts":{
	  	"start":"babel src --out-dir dist"
	  }
	5.编写src底下的es6的代码
	6.转换  
		babel src --out-dir dist cnpm run start
				npm run start
				npm run dev



   let特点
   1.let  {}代码块内的局部遍历
   2.let声明的变量不提升
   3.暂时性死区现象
    在let 变量声明前使用
   4.不可重复声明


   const关键字

   特性 暂时性死区现象
   		不可重复声明